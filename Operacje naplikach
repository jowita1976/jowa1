Open In Colab
In [0]:
# przygotowanie katalogu roboczego do pracy :)
import requests

def pobierzPlik(url, nazwaPliku):
    req = requests.get(url, stream=True)
    with open(nazwaPliku, 'wb') as uchwytPliku:
        for chunk in req.iter_content():
            uchwytPliku.write(chunk)

nazwyPlikow = ['alice.txt', 'siddhartha.txt', 'moby_dick.txt', 'little_women.txt', 'milionCyfrLiczbyPi.txt']
for nazwa in nazwyPlikow:
  pobierzPlik("https://github.com/rroszczyk/Python/raw/master/Pliki/"+nazwa, nazwa)
In [0]:
nazwaPliku = 'teksty.txt'

with open(nazwaPliku, 'a') as uchwytPliku:
    uchwytPliku.write("Python jest najlepszym językiem programowania\n")
    uchwytPliku.write("Uwielbiam tworzyć aplikacje uruchamiane w przeglądarce internetowej.\n")
In [0]:
import json

liczby = [2, 3, 5, 7, 11, 13]
kwadraty = {}
for liczba in liczby:
   kwadraty[liczba] = liczba**2

nazwaPliku = 'liczby.json'
with open(nazwaPliku, 'w') as uchwytPliku:
    json.dump(kwadraty, uchwytPliku)

print("Kwadraty liczb zostały zapisane w pliku")
Kwadraty liczb zostały zapisane w pliku
In [0]:
import json

nazwaPliku = 'liczby.json'
with open(nazwaPliku) as uchwytPliku:
    liczby = json.load(uchwytPliku)
    
print("Liczby które były zapisane w pliku:", (liczby))
Liczby które były zapisane w pliku: {'2': 4, '3': 9, '5': 25, '7': 49, '11': 121, '13': 169}
In [0]:
import json

def get_stored_username():
    """Pobranie imienia z pliku, o ile taki istnieje."""
    filename = 'username.json'
    try:
        with open(filename) as f_obj:
            username = json.load(f_obj)
    except FileNotFoundError:
        return None
    else:
        return username

def get_new_username():
    """
    Poproszenie użytkownika, aby podał swoje imię,
    a następnie zapisanie tego imienia w pliku.
    """
    username = input("Jak masz na imię? ")
    filename = 'username.json'
    with open(filename, 'w') as f_obj:
        json.dump(username, f_obj)
    return username

def greet_user():
    """Przywitanie użytkownika z użyciem jego imienia."""
    username = get_stored_username()
    if username:
        print("Witamy ponownie, " + username + "!")
    else:
        username = get_new_username()
        print("Twoje imię zostało zapisane i będzie używane później, "
            + username + "!")

greet_user()
Witamy ponownie, Radek!
In [0]:
import requests

def pobierzPlik(url, nazwaPliku):
    req = requests.get(url, stream=True)
    with open(nazwaPliku, 'wb') as uchwytPliku:
        for chunk in req.iter_content():
            uchwytPliku.write(chunk)

filename = 'alice.txt'
contents = ''

try:
    with open(filename) as f_obj:
        contents = f_obj.read()
except FileNotFoundError as e:
    msg = "Plik " + filename + " nie istnieje pobieram z Internetu."
    pobierzPlik("https://github.com/rroszczyk/Python/raw/master/Pliki/"+filename, filename)
    print(msg)
    try:
        with open(filename) as f_obj:
            contents = f_obj.read()
    except: 
        print("Jest problem z plikiem")
        contents = None
else:
    print("Używam wersji pliku z lokalnego repozytorium")

if contents:
    words = contents.split()
    num_words = len(words)
    print("Plik " + filename + " zawiera " + str(num_words) + " słów.")
else:
    print("Nie mamy danych wejściowych")
Używam wersji pliku z lokalnego repozytorium
Plik alice.txt zawiera 29461 słów.
In [0]:
fileName = 'alice.txt'

with open(fileName) as f_obj:
  contents = f_obj.read()

words = contents.split()

wordsCounter = {}

for word in words:
  if len(word) > 3:
    if word in wordsCounter:
      wordsCounter[word] = wordsCounter[word] + 1
    else:
      wordsCounter[word] = 1

iterator = iter(wordsCounter.items())
for i in range(10):
    print(next(iterator))

sortedWordsCounter = dict(sorted(wordsCounter.items(), key = lambda kv:(kv[1], kv[0]), reverse=True))

print("\nTop 10 words")
iterator = iter(sortedWordsCounter.items())
for i in range(10):
    print(next(iterator))
('\ufeffProject', 1)
("Gutenberg's", 2)
("Alice's", 11)
('Adventures', 4)
('Wonderland,', 3)
('Lewis', 4)
('Carroll', 4)
('This', 20)
('eBook', 5)
('anyone', 4)

Top 10 words
('said', 416)
('that', 226)
('Alice', 221)
('with', 214)
('very', 127)
('this', 122)
('little', 117)
('they', 109)
('about', 91)
('what', 86)
In [0]:
def count_words(filename):
    """Obliczenie przybliżonej liczby słów w danym pliku."""
    try:
        with open(filename) as f_obj:
            contents = f_obj.read() 
    except FileNotFoundError:
        pass
    else:
        # Obliczenie przybliżonej liczby słów w danym pliku.
        words = contents.split()
        num_words = len(words)
        print("Plik " + filename + " zawiera " + str(num_words) + " słów.")

filenames = ['alice.txt', 'siddhartha.txt', 'moby_dick.txt', 'little_women.txt']
for filename in filenames:
    count_words(filename)
Plik alice.txt zawiera 29461 słów.
Plik siddhartha.txt zawiera 42172 słów.
Plik moby_dick.txt zawiera 215136 słów.
Plik little_women.txt zawiera 189079 słów.
In [0]:
def obliczPi(liczbaCyfr):  # funkcja generująca liczbę Pi z dokładnością do liczbyCyfr
    q, r, t, k, n, l = 1, 0, 1, 1, 3, 3

    dziesietne = liczbaCyfr
    licznik = 0

    while licznik != dziesietne + 1:
            if 4 * q + r - t < n * t:
                    # zwracaj cyfrę
                    yield n
                    # wstac kropkę po pierwszej cyfrze
                    if licznik == 0:
                            yield '.'
                    if dziesietne == licznik:
                            print('')
                            break
                    licznik += 1
                    nr = 10 * (r - n * t)
                    n = ((10 * (3 * q + r)) // t) - 10 * n
                    q *= 10
                    r = nr
            else:
                    nr = (2 * q + r) * l
                    nn = (q * (7 * k) + 2 + (r * l)) // (t * l)
                    q *= k
                    t *= l
                    l += 2
                    k += 1
                    n = nn
                    r = nr


ileCyfr = obliczPi(int(input("Jak dużo cyfr z liczby Pi chcesz obliczyć?: ")))

i = 0

for d in ileCyfr:
  print(d, end='')
  i += 1
  if i == 80:
    print("")
    i = 0
Jak dużo cyfr z liczby Pi chcesz obliczyć?: 100
3.141592653589793238462643383279502884197169399375105820974944592307816406286208
9986280348253421170679
In [0]:
from mpmath import mp

nazwaPliku = "tysiacCyfrLiczbyPi.txt"

mp.dps = 1000
# wersja dla cierpliwych
with open(nazwaPliku, 'w') as uchwytPliku:
    uchwytPliku.write(str(mp.pi))

i = 0
for d in str(mp.pi):
  print(d, end='')
  i += 1
  if i == 80:
    print("")
    i = 0
3.141592653589793238462643383279502884197169399375105820974944592307816406286208
99862803482534211706798214808651328230664709384460955058223172535940812848111745
02841027019385211055596446229489549303819644288109756659334461284756482337867831
65271201909145648566923460348610454326648213393607260249141273724587006606315588
17488152092096282925409171536436789259036001133053054882046652138414695194151160
94330572703657595919530921861173819326117931051185480744623799627495673518857527
24891227938183011949129833673362440656643086021394946395224737190702179860943702
77053921717629317675238467481846766940513200056812714526356082778577134275778960
91736371787214684409012249534301465495853710507922796892589235420199561121290219
60864034418159813629774771309960518707211349999998372978049951059731732816096318
59502445945534690830264252230825334468503526193118817101000313783875288658753320
83814206171776691473035982534904287554687311595628638823537875937519577818577805
32171226806613001927876611195909216420199
In [0]:
milionCyfrPi = obliczPi(1000000)

nazwaPliku = "milionCyfrLiczbyPi.txt"

with open(nazwaPliku) as uchwytPliku:
    lines = uchwytPliku.readlines()

napisPi = ''
for line in lines:
    napisPi += line.rstrip()

urodziny = input("Podaj datę urodzenia (w formacie ddmmrr): ")
if urodziny in napisPi:
    print("Twoja data urodzenia znajduje się wśród miliona pierwszych cyfr liczby pi!")
else:
    print("Twoja data urodzenia nie znajduje się wśród miliona pierwszych cyfr liczby pi.")
Podaj datę urodzenia (w formacie ddmmrr): 010119
Twoja data urodzenia znajduje się wśród miliona pierwszych cyfr liczby pi!
